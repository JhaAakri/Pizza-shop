{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\aakrii\\\\Pizza-shop\\\\src\\\\MainSection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { cancelOrder } from './actions';\nimport TotalDeliveredForm from './TotalDeliveredForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainSection = ({\n  orders\n}) => {\n  _s();\n  const [pickedOrders, setPickedOrders] = useState([]);\n  const dispatch = useDispatch();\n  const [isOrderLimitReached, setIsOrderLimitReached] = useState(false);\n  useEffect(() => {\n    const newPickedOrders = orders.filter(order => order.stage === 'Order Picked');\n    setPickedOrders(newPickedOrders);\n\n    // Check if the order limit is reached\n    const currentOrderCount = orders.length;\n    const isLimitReached = currentOrderCount >= 10;\n    if (isOrderLimitReached !== isLimitReached) {\n      setIsOrderLimitReached(isLimitReached);\n      if (isLimitReached) {\n        showAlert();\n      }\n    }\n  }, [orders, isOrderLimitReached]);\n  const handleCancelOrder = orderId => {\n    dispatch(cancelOrder(orderId));\n  };\n  const getTableRow = (order, index, array) => {\n    const makingTime = order.size === 'Small' ? 3 : order.size === 'Medium' ? 4 : 5;\n    const currentTimeInSeconds = new Date().getTime() / 1000;\n    const elapsedSeconds = currentTimeInSeconds - order.startTime;\n    const isDelayed = order.stage !== 'Order Placed' && elapsedSeconds > 180;\n    const randomMinutes = Math.floor(Math.random() * 60);\n    const randomSeconds = Math.floor(Math.random() * 60);\n    const randomTime = `${randomMinutes} min ${randomSeconds} sec`;\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: isDelayed ? 'delayed' : '',\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: order.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: order.stage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: order.stage === 'Order Placed' && elapsedSeconds > 180 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"red-highlight\",\n          children: \"0 min 0 sec\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this) : randomTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: order.stage !== 'Order Ready' && order.stage !== 'Order Placed' && order.stage !== 'Order Picked' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCancelOrder(order.id),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, order.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  };\n  const showAlert = () => {\n    alert(\"Not taking any order for now.\");\n  };\n\n  // Sort orders based on delay in each stage\n  const sortedOrders = orders.slice().sort((a, b) => {\n    const timeA = a.timeInSeconds || 0;\n    const timeB = b.timeInSeconds || 0;\n    const delayA = a.stage !== 'Order Placed' ? timeA - a.startTime : 0;\n    const delayB = b.stage !== 'Order Placed' ? timeB - b.startTime : 0;\n    return delayB - delayA;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Main Section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), isOrderLimitReached && showAlert(), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Order Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Stage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total time spent (time from order placed)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sortedOrders.map((order, index, array) => getTableRow(order, index, array))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TotalDeliveredForm, {\n      totalPicked: pickedOrders.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(MainSection, \"N1pECUHF3iK3OCdpa/bLggDPUeQ=\", false, function () {\n  return [useDispatch];\n});\n_c = MainSection;\nexport default MainSection;\nvar _c;\n$RefreshReg$(_c, \"MainSection\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","cancelOrder","TotalDeliveredForm","jsxDEV","_jsxDEV","MainSection","orders","_s","pickedOrders","setPickedOrders","dispatch","isOrderLimitReached","setIsOrderLimitReached","newPickedOrders","filter","order","stage","currentOrderCount","length","isLimitReached","showAlert","handleCancelOrder","orderId","getTableRow","index","array","makingTime","size","currentTimeInSeconds","Date","getTime","elapsedSeconds","startTime","isDelayed","randomMinutes","Math","floor","random","randomSeconds","randomTime","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","alert","sortedOrders","slice","sort","a","b","timeA","timeInSeconds","timeB","delayA","delayB","map","totalPicked","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/aakrii/Pizza-shop/src/MainSection.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux'; \r\nimport { cancelOrder } from './actions'; \r\nimport TotalDeliveredForm from './TotalDeliveredForm';\r\n\r\nconst MainSection = ({ orders }) => {\r\n  const [pickedOrders, setPickedOrders] = useState([]);\r\n  const dispatch = useDispatch(); \r\n  const [isOrderLimitReached, setIsOrderLimitReached] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const newPickedOrders = orders.filter((order) => order.stage === 'Order Picked');\r\n    setPickedOrders(newPickedOrders);\r\n\r\n    // Check if the order limit is reached\r\n    const currentOrderCount = orders.length;\r\n    const isLimitReached = currentOrderCount >= 10;\r\n\r\n    if (isOrderLimitReached !== isLimitReached) {\r\n      setIsOrderLimitReached(isLimitReached);\r\n      \r\n      if (isLimitReached) {\r\n        showAlert();\r\n      }\r\n    }\r\n  }, [orders, isOrderLimitReached]);\r\n\r\n  const handleCancelOrder = (orderId) => {\r\n    dispatch(cancelOrder(orderId));\r\n  };\r\n\r\n  const getTableRow = (order, index, array) => {\r\n    const makingTime = order.size === 'Small' ? 3 : (order.size === 'Medium' ? 4 : 5);\r\n\r\n    const currentTimeInSeconds = new Date().getTime() / 1000;\r\n    const elapsedSeconds = currentTimeInSeconds - order.startTime;\r\n\r\n    const isDelayed = order.stage !== 'Order Placed' && elapsedSeconds > 180;\r\n\r\n    const randomMinutes = Math.floor(Math.random() * 60);\r\n    const randomSeconds = Math.floor(Math.random() * 60);\r\n    const randomTime = `${randomMinutes} min ${randomSeconds} sec`;\r\n\r\n    return (\r\n      <tr key={order.id} className={isDelayed ? 'delayed' : ''}>\r\n        <td>{order.id}</td>\r\n        <td>{order.stage}</td>\r\n        <td>\r\n          {order.stage === 'Order Placed' && elapsedSeconds > 180 ? (\r\n            <span className=\"red-highlight\">0 min 0 sec</span>\r\n          ) : (\r\n            randomTime\r\n          )}\r\n        </td>\r\n        <td>\r\n          {order.stage !== 'Order Ready' && order.stage !== 'Order Placed' && order.stage !== 'Order Picked' && (\r\n            <button onClick={() => handleCancelOrder(order.id)}>Cancel</button>\r\n          )}\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  const showAlert = () => {\r\n    alert(\"Not taking any order for now.\");\r\n  };\r\n\r\n  // Sort orders based on delay in each stage\r\n  const sortedOrders = orders.slice().sort((a, b) => {\r\n    const timeA = a.timeInSeconds || 0;\r\n    const timeB = b.timeInSeconds || 0;\r\n    const delayA = a.stage !== 'Order Placed' ? timeA - a.startTime : 0;\r\n    const delayB = b.stage !== 'Order Placed' ? timeB - b.startTime : 0;\r\n    return delayB - delayA;\r\n  });\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <h2>Main Section</h2>\r\n      {isOrderLimitReached && showAlert()}\r\n      <table className=\"bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>Order Id</th>\r\n            <th>Stage</th>\r\n            <th>Total time spent (time from order placed)</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {sortedOrders.map((order, index, array) => getTableRow(order, index, array))}\r\n        </tbody>\r\n      </table>\r\n      <TotalDeliveredForm totalPicked={pickedOrders.length} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainSection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}